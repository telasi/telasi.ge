<!--Configure the adhoc workstep creation-->
<AdhocWorkstepConfiguration>
  <!--A label for this workstep-->
  <WorkstepLabel />
  <!--Defines a image generation correction factor. If for example this document contains very small text, which might not be readable with the standard image resolution of the client, this factor can be used to tell the client to get a higher resolution.-->
  <SmallTextZoomFactorPercent>100</SmallTextZoomFactorPercent>
  <!--Defines the time to live of all the documents created by the workstep. After this time to live is expired, all documents are deleted-->
  <WorkstepTimeToLiveInMinutes>900</WorkstepTimeToLiveInMinutes>
  <!--The default signature width for parsed signature fields in points-->
  <DefaultWidth>230</DefaultWidth>
  <!--The default signature height for parsed signature fields in points-->
  <DefaultHeight>100</DefaultHeight>
  <!--Defines if biometric authentication should be enforced for all signatures. Possible values: '1' enforce biometric authentication, '0' do not enforce biometric authentication-->
  <EnforceBiometricAuthentication>0</EnforceBiometricAuthentication>
  <!--Configure the adhoc workstep creation-->
  <NoSequenceEnforced>0</NoSequenceEnforced>
  <!--Configuration for parsing the form fields. Possible values: '1' parse the form fields, '0' do not parse form fields-->
  <!--Attribute 'mapRequiredFieldsToRequiredTask': set the form filling task required when some of the fields are required. Possible values: '1' required forms lead to required tasks, '0' required fields do not enforce the task to be required-->
  <!--Attribute 'formsGrouping': Specify how the parsed forms should be grouped into tasks. Possible values: 'PerPage' all forms on one page are grouped to one forms group, 'PerDocument' all forms in the document are grouped to one forms group-->
  <ParseFormFields mapRequiredFieldsToRequiredTask="0" formsGrouping="PerPage">
    1
  </ParseFormFields>
  <!--If the workstep is not generated by hand but automatically generated by the Workstep Controller AdhocPolicies are specified-->
  <AdhocPolicies>
    <!--Configure if any modifications, like adding attachments, freehand annotations are allowed after a signature is applied-->
    <AllowModificationsAfterSignature>0</AllowModificationsAfterSignature>
  </AdhocPolicies>
  <!--Configurate the signatures for this workstep-->
  <signaturePluginConfiguration>
    <!--Configurate the signature properties-->
    <PdfSignatureProperties_V1>
      <!--Should the signatures be pdfA confomant. Note this setting does not convert a document into pdfA, it only keeps it pdfA confomant if it already is. Possible values: '1' sign pdfA conformant - in this case the file size will be bigger than without pdfA, '0' do not sign pdfA conformant.-->
      <PdfAConformant>false</PdfAConformant>
      <!--If the signature should be timestamped, a timestamp provider can be configured. Authentication can be username and password, an authentication certificate or no authentication-->
      <SignatureTimestampData>
        <!--The password to authenticate with the timestamp server-->
        <Password />
        <!--The hash algorithm the timestamp server should use. The server has to support the algorithm. Possible values: 'Sha1', 'Sha256', 'Sha512'-->
        <SignatureHashAlgorithm>SHA1</SignatureHashAlgorithm>
        <!--The timestamp servers uri-->
        <Uri />
        <!--The username to authenticate with the timestamp server-->
        <UserName />
      </SignatureTimestampData>
    </PdfSignatureProperties_V1>
    <!--Configurate the cryptographic data-->
    <PdfSignatureCryptographicData_V1>
      <!--The hash algorithm used for the signatues. Possible values: 'Sha1', 'Sha256', 'Sha512'-->
      <SignatureHashAlgorithm>Sha256</SignatureHashAlgorithm>
      <!--The description of the signing certificate-->
      <SigningCertificateDescriptor>
        <!--The certificates identifier-->
        <Identifier>DDED02DC192573B722E8C027F0E47E63152EB822</Identifier>
        <!--The certificate identifier type. Possible values: 'Subject', 'Sha1Thumbprint'-->
        <Type>Sha1Thumbprint</Type>
        <!--The cryptographic service provider to locate the certificate. Possible values: 'default' uses the servers certificate store, 'custom' uses the custom signature action-->
        <Csp>default</Csp>
      </SigningCertificateDescriptor>
    </PdfSignatureCryptographicData_V1>
  </signaturePluginConfiguration>
  <!--Configure the actions done by the server and the by the clients when the workstep is finished.-->
  <FinishAction>
    <!--Configure the action done by the server when the workstep is finished.-->
    <!--Attribute 'callSynchronous' wether the server should call that action before returning to the client which called FinishWorkstep. Possible values: '1' the server does not return until the action is completed. This may cause long waiting times for the client in case of timeouts or other errors, '0' the server returns to the client and calls the action afterwards. This may cause problems if the client finish action depends on the server finish action to be already completed-->
    <ServerAction callSynchronous="0">http://localhost:50100/CleanupFinishedWorksteps.aspx?WorkstepID=##WorkstepId##</ServerAction>
    <!--A client action specifies the behavior of a specific client after a workstep is finished.-->
    <!--'clientName': defines which client should implement this behavior. Predefined client names are: 'SIGNificant WSI', 'SIGNificant iPadApp' and 'SIGNificant AndroidApp'. Any additional client name can be defined by the user.-->
    <!--'closeApp': defines if the client should close after finish.-->
    <!--'RemoveDocumentFromRecentDocumentList': if 1, the Document (Workstep) is removed from the document list, when the workstep has been successfully synced with the server.-->
    <!--'CallClientActionOnlyAfterSuccessfulSync': if 1, the clientAction (Uri) is called, when the workstep has been synced with the server. if 0, the clientAction (Uri) is called, when the user pressed finish/reject - independently, if the server was reachable and returned ok.-->
    <ClientAction clientName="SIGNificant WSI" closeApp="0" RemoveDocumentFromRecentDocumentList="0" CallClientActionOnlyAfterSuccessfulSync="1">###callback###</ClientAction>
  </FinishAction>
  <!--Configure the signature string parsing-->
  <SigStringParsingConfiguration>
    <!--Defines a signature string to parse. Tag can be present more than once-->
    <SigStringsForParsing>
      <!--The start pattern of the signature string if it has a start and end pattern. Otherwise the whole word to parse-->
      <StartPattern>`sig</StartPattern>
      <!--End pattern if needed, otherwise empty-->
      <EndPattern>`</EndPattern>
      <!--Define if the signature strings should be cleared from the document. Possible values: '1' remove the signature strings from the document, '0' do not change the document-->
      <ClearSigString>1</ClearSigString>
      <!--Define if only the entire word should be searched. For example if start pattern is 'signature' only 'signature' but not 'signaturepad' is found. This option does only effect signature string without end patterns. Possible values: '1' search only the entire word, '0' search words containing the pattern as well.-->
      <SearchEntireWordOnly>1</SearchEntireWordOnly>
    </SigStringsForParsing>
  </SigStringParsingConfiguration>
  <!--Defines general policies for this workstep-->
  <GeneralPolicies>
    <!--Is the client allowed to save the workstep document-->
    <AllowSaveDocument>1</AllowSaveDocument>
    <!--Is the client allowed to email the workstep document-->
    <AllowEmailDocument>1</AllowEmailDocument>
    <!--Is the client allowed to print the workstep document-->
    <AllowPrintDocument>1</AllowPrintDocument>
    <!--Is the client allowed to finish the workstep-->
    <AllowFinishWorkstep>1</AllowFinishWorkstep>
    <!--Is the client allowed to reject the workstep-->
    <AllowRejectWorkstep>1</AllowRejectWorkstep>
    <!--Is the client allowed to undo actions-->
    <AllowUndoLastAction>1</AllowUndoLastAction>
    <!--Is the client allowed to add signatures which are not defined in the tasks-->
    <AllowAdhocSignatures>1</AllowAdhocSignatures>
    <!--Is the client allowed to add adhoc freehand annotations-->
    <AllowAdhocFreeHandAnnotations>1</AllowAdhocFreeHandAnnotations>
    <!--Is the client allowed to add adhoc typewriter annotations-->
    <AllowAdhocTypewriterAnnotations>1</AllowAdhocTypewriterAnnotations>
    <!--Is the client allowed to add adhoc attachments-->
    <AllowAdhocPdfAttachments>1</AllowAdhocPdfAttachments>
    <!--Is the client allowed to append adhoc documents-->
    <AllowAdhocPdfPageAppending>1</AllowAdhocPdfPageAppending>
  </GeneralPolicies>
</AdhocWorkstepConfiguration>